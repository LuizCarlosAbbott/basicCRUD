{"version":3,"sources":["assets/imgs/logo.png","components/template/Logo.jsx","components/template/Nav.jsx","components/template/Header.jsx","components/template/Main.jsx","components/home/Home.jsx","components/user/UserCrud.jsx","main/Routes.jsx","components/template/Footer.jsx","serviceWorker.js","index.js","main/App.jsx"],"names":["module","exports","props","className","href","src","logo","alt","icon","title","subtitle","Fragment","children","headerProps","baseUrl","initialState","user","name","email","list","UserCrud","state","axios","then","resp","setState","data","this","method","id","url","getUpdatedList","add","filter","u","unshift","event","target","value","type","onChange","e","updateField","placeholder","onClick","save","clear","delete","renderRows","map","key","load","remove","renderForm","renderTable","Component","path","component","exact","patch","Home","from","to","Boolean","window","location","hostname","match","ReactDOM","render","Routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ee43e03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5c224125.png\";","import \"./Logo.css\";\nimport logo from \"../../assets/imgs/logo.png\";\nimport React from \"react\";\n\nexport default props => (\n  <aside className=\"logo\">\n    <a href=\"#/basicCRUD/\" className=\"logo\">\n      <img src={logo} alt=\"logo\" />\n    </a>\n  </aside>\n);\n","import \"./Nav.css\";\nimport React from \"react\";\n\nexport default props => (\n  <aside className=\"menu-area\">\n    <nav className=\"menu\">\n      <a href=\"#/basicCRUD/\">\n        <i className=\"fa fa-home\"></i> Início\n      </a>\n      <a href=\"#/basicCRUD/users\">\n        <i className=\"fa fa-users\"></i> Usuários\n      </a>\n    </nav>\n  </aside>\n);\n","import './Header.css'\nimport React from 'react'\n\nexport default props =>\n    <header className=\"header d-none d-sm-flex flex-column\">\n        <h1 className=\"mt-3\">\n            <i className={`fa fa-${props.icon}`}></i> {props.title}\n        </h1>\n        <p className=\"lead text-muted\">{props.subtitle}</p>\n    </header>\n\n/* d-none -> para celulaes o header não vai aparecer */\n/* d-sm-flex para dispositivos pequenos usar o d-flex */\n/* flex-column para usar a coluna */","import './Main.css'\nimport React from 'react'\nimport Header from './Header'\n\nexport default props =>\n    <React.Fragment>\n        <Header {...props} />\n        <main className=\"content container-fluid\">\n            <div className=\"p-3 mt-3\">\n                {props.children}\n            </div>\n        </main>\n    </React.Fragment>\n\n// container-fluid - bootstrap","import React from 'react'\nimport Main from '../template/Main'\n\nexport default props =>\n    <Main icon=\"home\" title=\"Inicio\"\n        subtitle=\"Segundo Projeto do capitulo de React.\">\n        <div className=\"display-4\">Bem Vindo!</div>\n        <hr />\n        <p className=\"mb-0\">Sistema para exemplificar a construção\n            de um cadastro desenvolvido em React!</p>\n    </Main>","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../template/Main\";\n\nconst headerProps = {\n  icon: \"users\",\n  title: \"Usuários\",\n  subtitle: \"Cadastro de usuários: Incluir, Listar, Alterar e Excluir!\"\n};\n\nconst baseUrl = \"http://localhost:3001/users\";\nconst initialState = {\n  user: { name: \"\", email: \"\" },\n  list: []\n};\n\nexport default class UserCrud extends Component {\n  state = { ...initialState };\n\n  componentWillMount() {\n    axios(baseUrl).then(resp => {\n      this.setState({ list: resp.data });\n    });\n  }\n\n  clear() {\n    this.setState({ user: initialState.user });\n  }\n\n  save() {\n    const user = this.state.user;\n    const method = user.id ? \"put\" : \"post\";\n    const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\n    axios[method](url, user).then(resp => {\n      const list = this.getUpdatedList(resp.data);\n      this.setState({ user: initialState.user, list });\n    });\n  }\n\n  getUpdatedList(user, add = true) {\n    const list = this.state.list.filter(u => u.id !== user.id);\n    if (add) list.unshift(user);\n    return list;\n  }\n\n  updateField(event) {\n    const user = { ...this.state.user };\n    user[event.target.name] = event.target.value;\n    this.setState({ user });\n  }\n\n  renderForm() {\n    return (\n      <div className=\"form\">\n        <div className=\"row\">\n          <div className=\"col12 col-md-6\">\n            <div className=\"form-group\">\n              <label>Nome</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                value={this.state.user.name}\n                onChange={e => this.updateField(e)}\n                placeholder=\"Digite o nome...\"\n              />\n            </div>\n          </div>\n\n          <div className=\"col-12 col-md-6\">\n            <div className=\"form-group\">\n              <label>E-mail</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.user.email}\n                onChange={e => this.updateField(e)}\n                placeholder=\"Digite o e-mail...\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n        <div className=\"row\">\n          <div className=\"col-12 d-flex justify-content-end\">\n            <button className=\"btn btn-primary\" onClick={e => this.save(e)}>\n              Salvar\n            </button>\n\n            <button\n              className=\"btn btn-secondary ml-2\"\n              onClick={e => this.clear(e)}\n            >\n              Cancelar\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  load(user) {\n    this.setState({ user });\n  }\n\n  remove(user) {\n    axios.delete(`${baseUrl}/${user.id}`).then(resp => {\n      const list = this.getUpdatedList(user, false);\n      this.setState({ list });\n    });\n  }\n\n  renderTable() {\n    return (\n      <table className=\"table mt-4\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Nome</th>\n            <th>E-mail</th>\n            <th>Ações</th>\n          </tr>\n        </thead>\n        <tbody>{this.renderRows()}</tbody>\n      </table>\n    );\n  }\n\n  renderRows() {\n    return this.state.list.map(user => {\n      return (\n        <tr key={user.id}>\n          <td>{user.id}</td>\n          <td>{user.name}</td>\n          <td>{user.email}</td>\n          <td>\n            <button className=\"btn btn-warning\" onClick={() => this.load(user)}>\n              <i className=\"fa fa-pencil\"></i>\n            </button>\n            <button\n              className=\"btn btn-danger ml-2\"\n              onClick={() => this.remove(user)}\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <Main {...headerProps}>\n        {this.renderForm()}\n        {this.renderTable()}\n      </Main>\n    );\n  }\n}\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router\";\n\nimport Home from \"../components/home/Home\";\nimport UserCrud from \"../components/user/UserCrud\";\n\nexport default props => (\n  <Switch>\n    <Route path=\"/basicCRUD/users\" component={UserCrud} />\n    <Route exact patch=\"/basicCRUD\" component={Home} />\n    <Redirect from=\"*\" to=\"/basicCRUD\" />\n  </Switch>\n);\n","import \"./Footer.css\";\nimport React from \"react\";\n\nexport default props => (\n  <footer className=\"footer\">\n    <span>\n      Desenvolvido com <i className=\"fa fa-heart text-danger\"></i> por Luiz\n      seguindo instruções da\n      <strong>\n        {\" \"}\n        Cod<span className=\"text-danger\">3</span>r\n      </strong>\n    </span>\n  </footer>\n);\n\n// fa fa-heart é um coração do fontes-awesome\n// text-danger para o nome ficar vermelho\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport './App.css'\nimport React from 'react'\nimport { HashRouter } from 'react-router-dom'\n\nimport Logo from '../components/template/Logo'\nimport Nav from '../components/template/Nav'\nimport Routes from './Routes'\nimport Footer from '../components/template/Footer'\n\nexport default props =>\n    <HashRouter>\n        <div className=\"app\">\n            <Logo />\n            <Nav />\n            <Routes />\n            <Footer />\n        </div>\n    </HashRouter>"],"sourceRoot":""}